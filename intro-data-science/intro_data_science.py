# -*- coding: utf-8 -*-
"""intro-data-science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zp4ughWTugDnfFuAcaGm2opHwErAOM5p

# Analisando as notas em geral
"""

import pandas as pd
import seaborn as sns

notas = pd.read_csv("ratings.csv")


notas.columns = ["usuarioId", "filmeId", "nota", "momento"]
notas.head()



notas["nota"].unique()

notas['nota'].value_counts()

print(f"Média: {notas.nota.mean()}")

print(f"Mediana: {notas.nota.median()}")

notas.nota.describe()



notas.nota

notas.nota.plot(kind='hist')

sns.boxplot(notas.nota)

"""# Olhando os filmes"""

filmes = pd.read_csv("movies.csv")
filmes.columns = ["filmeId", "titulo", "generos"]
filmes.head()

notas.head()

"""# Analisando algumas notas específicas por filme"""

notas.query("filmeId==1").nota.mean()

notas.query("filmeId==2").nota.mean()

medias_por_filme = notas.groupby("filmeId").mean().nota

medias_por_filme.head()

medias_por_filme.plot(kind="hist")

import matplotlib.pyplot as plt

plt.figure(figsize=(5,8))
sns.boxplot(y=medias_por_filme)

medias_por_filme.describe()

sns.displot(medias_por_filme, bins=10)

import matplotlib.pyplot as plt

plt.hist(medias_por_filme)
plt.title("Histograma das médias dos filmes")

tmdb = pd.read_csv("tmdb_5000_movies.csv")
tmdb.head()

tmdb.original_language.unique() # categoria nominal

# budget => orçamento => quantitativa contínuo

# vota_count => quantidade de votos 1, 2,3 não tem ponto flutuante

# notas movielens => pontos flutuantes =>

contagem_de_lingua = tmdb.original_language.value_counts().to_frame().reset_index()
contagem_de_lingua.columns = ["original_language", "total"]
contagem_de_lingua.head()

sns.barplot(x = "original_language", y = "total", data = contagem_de_lingua)

sns.catplot(x = "original_language", kind = "count", data = tmdb)

plt.pie(contagem_de_lingua.total, labels = contagem_de_lingua.original_language)

total_por_lingua = tmdb.original_language.value_counts()
total_geral = total_por_lingua.sum()
total_ingles = total_por_lingua.loc["en"]
total_do_resto = total_geral - total_ingles

dados = {
    'lingua': ['ingles', 'outros'],
    'total': [total_ingles, total_do_resto]
}

dados = pd.DataFrame(dados)

sns.barplot(x="lingua", y="total", data=dados)

plt.pie(dados.total, labels = dados.lingua)

total_por_lingua_outros_filmes = tmdb.query("original_language != 'en'").original_language.value_counts()

filmes_sem_lingua_original_em_ingles = tmdb.query("original_language != 'en'")
sns.catplot(x="original_language", kind="count", data=filmes_sem_lingua_original_em_ingles, aspect=2, palette="GnBu_d", order=total_por_lingua_outros_filmes.index)

"""# revisando o papel da média, mediana, medidas de tendência central, dispersão, desvio padrão, box plot, histograma"""



filmes.head(2)

notas_do_toy_story = notas.query("filmeId==1")
notas_do_jumanji = notas.query("filmeId==2")
print(len(notas_do_toy_story), len(notas_do_jumanji))

print("Nota média do Toy Story %.2f" % notas_do_toy_story.nota.mean())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.nota.mean())

print("Nota mediana do Toy Story %.2f" % notas_do_toy_story.nota.median())
print("Nota mediana do Jumanji %.2f" % notas_do_jumanji.nota.median())

import numpy as np

filme1 = np.append(np.array([2.5] * 10), np.array([3.5] * 10))
filme2 = np.append(np.array([5] * 10), np.array([1] * 10))

print(filme1.mean(), filme2.mean())
print(np.median(filme1), np.median(filme2))

plt.hist(filme1)

plt.hist(filme2)

plt.boxplot([filme1, filme2])

sns.boxplot(notas_do_toy_story.nota)
sns.boxplot(notas_do_jumanji.nota)

plt.boxplot([notas_do_jumanji.nota, notas_do_toy_story.nota])

sns.boxplot(x="filmeId", y="nota", data=notas.query("filmeId in [1, 2, 3, 4, 5]"))

print(notas_do_jumanji.nota.std(), notas_do_toy_story.nota.std())

print(np.std(filme1), np.std(filme2))